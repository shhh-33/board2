<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:tx="http://www.springframework.org/schema/tx" 
	   xmlns:context="http://www.springframework.org/schema/context"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

	<!-- web.xml에 정의된 ConterxtLoaderListener가 로딩하는 
	         자바빈(부모컨텍스트)을 정의 
	     DispatcherServlet이 로딩하는 자바빈은 자식 컨텍스트 -->

<!-- jdbc  -->
	<context:property-placeholder location="classpath:jdbc.properties" />

	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="com.mysql.cj.jdbc.Driver"></property> 
		<property name="url" value="jdbc:mysql://localhost:3306/board?serverTimezone=Asia/Seoul"></property> 
		<property name="username" value="root" />
		<property name="password" value="1234" />
	</bean>

<!-- mybatis 읽어오려고 ref(바로 위 id=dataSource) 참고했다. -->
	<bean id="SqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!--mybatis 설정파일 경로 -->
		<property name="configLocation" value="classpath:/mybatis/mybatis-config.xml" />
		<property name="mapperLocations" value="classpath*:/mybatis/mapper/**/*.xml" />
	</bean>

<!-- 자바 mapper 파일은 board, user 2개다 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" 
		value="ojc.repository" />
	</bean>

<!--sql 실행  -->
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate" 
	      destroy-method="clearCache">
		<constructor-arg name="sqlSessionFactory" ref="SqlSessionFactory" />
	</bean>

	<bean id="transactionManager" 
	      class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<tx:annotation-driven transaction-manager="transactionManager" />
</beans>
